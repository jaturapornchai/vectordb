package main

import (
	"log"
	"net/http"
)

var cfg *Config

func main() {
	// ‡πÇ‡∏´‡∏•‡∏î config
	cfg = loadConfig()

	log.Println("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Simple Text Search API Server")
	log.Println("üìÅ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: ./doc")

	// ‚ú® ‡πÇ‡∏´‡∏•‡∏î word segmentation library (mapkha)
	if err := initWordSegmentation(); err != nil {
		log.Printf("‚ö†Ô∏è  ‚ö†Ô∏è  Word Segmentation ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°: %v", err)
		log.Println("    ‚Üí ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ Thai word segmentation")
	}

	// Routes
	http.HandleFunc("/health", healthHandlerSimple)
	http.HandleFunc("/search", searchHandlerSimple)

	log.Println("‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô HTTP server ‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï 8080")
	log.Println("  POST http://localhost:8080/search")

	if err := http.ListenAndServe(":8080", nil); err != nil {
		log.Fatal(err)
	}
}
