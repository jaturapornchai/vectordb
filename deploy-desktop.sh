#!/bin/bash
# Quick Start Script - Mac/Linux Desktop
# ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö deploy ‡∏ö‡∏ô Mac/Linux Desktop ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å

echo "üöÄ Vector Search API - Desktop Deployment"
echo "========================================"
echo ""

# 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Docker
echo "1Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Docker..."
if ! docker ps > /dev/null 2>&1; then
    echo "‚ùå Docker ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î Docker ‡∏Å‡πà‡∏≠‡∏ô"
    exit 1
fi
echo "   ‚úÖ Docker ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà"
echo ""

# 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
echo "2Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô..."
REQUIRED_FILES=("docker-compose.yml" "Dockerfile" ".env" "main.go")
MISSING_FILES=()

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        MISSING_FILES+=("$file")
    fi
done

if [ ${#MISSING_FILES[@]} -ne 0 ]; then
    echo "   ‚ùå ‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ: ${MISSING_FILES[*]}"
    if [[ " ${MISSING_FILES[@]} " =~ " .env " ]]; then
        echo "   üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .env ‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà API keys"
    fi
    exit 1
fi
echo "   ‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô"
echo ""

# 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
echo "3Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£..."
if [ ! -d "doc" ]; then
    echo "   ‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå doc/ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á..."
    mkdir -p doc
fi
DOC_COUNT=$(find doc -name "*.md" 2>/dev/null | wc -l)
echo "   ‚úÖ ‡∏û‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ $DOC_COUNT ‡πÑ‡∏ü‡∏•‡πå"
echo ""

# 4. Stop services ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
echo "4Ô∏è‚É£  ‡∏´‡∏¢‡∏∏‡∏î services ‡πÄ‡∏î‡∏¥‡∏°..."
docker-compose down > /dev/null 2>&1
echo "   ‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô"
echo ""

# 5. Build Docker images
echo "5Ô∏è‚É£  Build Docker images..."
docker-compose build
if [ $? -ne 0 ]; then
    echo "   ‚ùå Build ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
    exit 1
fi
echo "   ‚úÖ Build ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
echo ""

# 6. Start services
echo "6Ô∏è‚É£  Start services..."
docker-compose up -d
if [ $? -ne 0 ]; then
    echo "   ‚ùå Start ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
    exit 1
fi
echo "   ‚úÖ Services ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß"
echo ""

# 7. ‡∏£‡∏≠‡πÉ‡∏´‡πâ Ollama ‡∏û‡∏£‡πâ‡∏≠‡∏°
echo "7Ô∏è‚É£  ‡∏£‡∏≠ Ollama ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)..."
sleep 10
echo "   ‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô"
echo ""

# 8. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ model llama3.2 ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
echo "8Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Ollama models..."
MODELS=$(docker exec ollama ollama list 2>/dev/null)
if ! echo "$MODELS" | grep -q "llama3.2"; then
    echo "   ‚ö†Ô∏è  ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ llama3.2 model ‡∏Å‡∏≥‡∏•‡∏±‡∏á download..."
    echo "   üì• (‡∏Ç‡∏ô‡∏≤‡∏î ~2GB, ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 5-10 ‡∏ô‡∏≤‡∏ó‡∏µ)"
    echo ""
    
    docker exec ollama ollama pull llama3.2:latest
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "   ‚úÖ Download ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
    else
        echo ""
        echo "   ‚ùå Download ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
        exit 1
    fi
else
    echo "   ‚úÖ ‡∏°‡∏µ llama3.2 model ‡πÅ‡∏•‡πâ‡∏ß"
fi
echo ""

# 9. Test API
echo "9Ô∏è‚É£  ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API..."
sleep 3

HEALTH=$(curl -s http://localhost:8080/health)
if [ $? -eq 0 ]; then
    echo "   ‚úÖ API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥"
    echo "   üìä Response: $HEALTH"
else
    echo "   ‚ùå API ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà"
    echo "   üí° ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: docker-compose logs -f vectordb-api"
fi
echo ""

# 10. ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ
echo "========================================"
echo "‚úÖ Deployment ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!"
echo "========================================"
echo ""

echo "üìç API Endpoint:"
echo "   http://localhost:8080/search"
echo ""

echo "üîß ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå:"
echo "   ‡∏î‡∏π logs:        docker-compose logs -f vectordb-api"
echo "   Stop services:  docker-compose stop"
echo "   Start services: docker-compose start"
echo "   Restart:        docker-compose restart"
echo "   ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:      docker-compose down -v"
echo ""

echo "üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:"
echo '   curl -X POST http://localhost:8080/search \'
echo '     -H "Content-Type: application/json" \'
echo '     -d '"'"'{"query":"‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á","useSummary":false}'"'"
echo ""

echo "üìö ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: DEPLOY_DESKTOP.md"
echo ""

echo "üéâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!"
