# Quick Start Script - Windows Desktop
# ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö deploy ‡∏ö‡∏ô Windows Desktop ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å

Write-Host "üöÄ Vector Search API - Desktop Deployment" -ForegroundColor Cyan
Write-Host "========================================`n" -ForegroundColor Cyan

# 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Docker
Write-Host "1Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Docker Desktop..." -ForegroundColor Yellow
$dockerRunning = docker ps 2>$null
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Docker Desktop ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î Docker Desktop ‡∏Å‡πà‡∏≠‡∏ô" -ForegroundColor Red
    exit 1
}
Write-Host "   ‚úÖ Docker Desktop ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà`n" -ForegroundColor Green

# 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
Write-Host "2Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô..." -ForegroundColor Yellow
$requiredFiles = @("docker-compose.yml", "Dockerfile", ".env", "main.go")
$missingFiles = @()

foreach ($file in $requiredFiles) {
    if (-Not (Test-Path $file)) {
        $missingFiles += $file
    }
}

if ($missingFiles.Count -gt 0) {
    Write-Host "   ‚ùå ‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ: $($missingFiles -join ', ')" -ForegroundColor Red
    if ($missingFiles -contains ".env") {
        Write-Host "   üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .env ‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà API keys" -ForegroundColor Yellow
    }
    exit 1
}
Write-Host "   ‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô`n" -ForegroundColor Green

# 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
Write-Host "3Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£..." -ForegroundColor Yellow
if (-Not (Test-Path "doc")) {
    Write-Host "   ‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå doc/ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á..." -ForegroundColor Yellow
    New-Item -ItemType Directory -Path "doc" -Force | Out-Null
}
$docFiles = Get-ChildItem -Path "doc" -Filter "*.md" -ErrorAction SilentlyContinue
Write-Host "   ‚úÖ ‡∏û‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ $($docFiles.Count) ‡πÑ‡∏ü‡∏•‡πå`n" -ForegroundColor Green

# 4. Stop services ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
Write-Host "4Ô∏è‚É£  ‡∏´‡∏¢‡∏∏‡∏î services ‡πÄ‡∏î‡∏¥‡∏°..." -ForegroundColor Yellow
docker-compose down 2>$null | Out-Null
Write-Host "   ‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô`n" -ForegroundColor Green

# 5. Build Docker images
Write-Host "5Ô∏è‚É£  Build Docker images..." -ForegroundColor Yellow
docker-compose build
if ($LASTEXITCODE -ne 0) {
    Write-Host "   ‚ùå Build ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" -ForegroundColor Red
    exit 1
}
Write-Host "   ‚úÖ Build ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`n" -ForegroundColor Green

# 6. Start services
Write-Host "6Ô∏è‚É£  Start services..." -ForegroundColor Yellow
docker-compose up -d
if ($LASTEXITCODE -ne 0) {
    Write-Host "   ‚ùå Start ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" -ForegroundColor Red
    exit 1
}
Write-Host "   ‚úÖ Services ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß`n" -ForegroundColor Green

# 7. ‡∏£‡∏≠‡πÉ‡∏´‡πâ Ollama ‡∏û‡∏£‡πâ‡∏≠‡∏°
Write-Host "7Ô∏è‚É£  ‡∏£‡∏≠ Ollama ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)..." -ForegroundColor Yellow
Start-Sleep -Seconds 10
Write-Host "   ‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô`n" -ForegroundColor Green

# 8. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ model llama3.2 ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
Write-Host "8Ô∏è‚É£  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Ollama models..." -ForegroundColor Yellow
$models = docker exec ollama ollama list 2>$null
if ($models -notmatch "llama3.2") {
    Write-Host "   ‚ö†Ô∏è  ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ llama3.2 model ‡∏Å‡∏≥‡∏•‡∏±‡∏á download..." -ForegroundColor Yellow
    Write-Host "   üì• (‡∏Ç‡∏ô‡∏≤‡∏î ~2GB, ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 5-10 ‡∏ô‡∏≤‡∏ó‡∏µ)`n" -ForegroundColor Yellow
    
    docker exec ollama ollama pull llama3.2:latest
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "`n   ‚úÖ Download ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`n" -ForegroundColor Green
    } else {
        Write-Host "`n   ‚ùå Download ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "   ‚úÖ ‡∏°‡∏µ llama3.2 model ‡πÅ‡∏•‡πâ‡∏ß`n" -ForegroundColor Green
}

# 9. Test API
Write-Host "9Ô∏è‚É£  ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API..." -ForegroundColor Yellow
Start-Sleep -Seconds 3

try {
    $healthCheck = Invoke-RestMethod -Uri "http://localhost:8080/health" -Method Get -ErrorAction Stop
    Write-Host "   ‚úÖ API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥" -ForegroundColor Green
    Write-Host "   üìä Status: $($healthCheck.status)" -ForegroundColor Cyan
    Write-Host "   üìù Message: $($healthCheck.message)`n" -ForegroundColor Cyan
} catch {
    Write-Host "   ‚ùå API ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà" -ForegroundColor Red
    Write-Host "   üí° ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: docker-compose logs -f vectordb-api`n" -ForegroundColor Yellow
}

# 10. ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "‚úÖ Deployment ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!" -ForegroundColor Green
Write-Host "========================================`n" -ForegroundColor Cyan

Write-Host "üìç API Endpoint:" -ForegroundColor Yellow
Write-Host "   http://localhost:8080/search`n" -ForegroundColor White

Write-Host "üîß ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå:" -ForegroundColor Yellow
Write-Host "   ‡∏î‡∏π logs:        docker-compose logs -f vectordb-api" -ForegroundColor White
Write-Host "   Stop services:  docker-compose stop" -ForegroundColor White
Write-Host "   Start services: docker-compose start" -ForegroundColor White
Write-Host "   Restart:        docker-compose restart" -ForegroundColor White
Write-Host "   ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:      docker-compose down -v`n" -ForegroundColor White

Write-Host "üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:" -ForegroundColor Yellow
Write-Host '   $body = @{ query = "‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á"; useSummary = $false } | ConvertTo-Json' -ForegroundColor White
Write-Host '   Invoke-RestMethod -Uri "http://localhost:8080/search" -Method Post -Body $body -ContentType "application/json; charset=utf-8"' -ForegroundColor White
Write-Host ""

Write-Host "üìö ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: DEPLOY_DESKTOP.md`n" -ForegroundColor Yellow

Write-Host "üéâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!" -ForegroundColor Green
